{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\Code\\\\REACT_NODE\\\\ReactJS\\\\Frontend-SWP301\\\\src\\\\Components\\\\Forms\\\\CreateAccount.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport './FormCSS/CreateAccount.css';\nimport Box from '@mui/material/Box';\nimport Divider from '@mui/material/Divider';\nimport Snackbar from '@mui/material/Snackbar';\nimport Alert from '@mui/material/Alert';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as Yup from \"yup\";\nimport Background from '../Themes/Background.jsx';\nimport { ThemeContext } from '../Themes/ThemeProvider.tsx';\nimport { PostCreator, PostUserAccount } from '../../API/UserAPI/POST.tsx';\nimport CustomizedSwitch from '../StyledMUI/CustomizedSwitch.jsx';\nimport { FormControlLabel } from '@mui/material';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport LoadingScreen from '../LoadingScreens/LoadingScreenSpokes.jsx';\nimport CustomizedTextField from '../StyledMUI/CustomizedTextField.tsx';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LoginAsGuest() {\n  _s();\n  const {\n    theme\n  } = useContext(ThemeContext);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sx: {\n        textAlign: 'center',\n        paddingBottom: '5%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          \"&::before, &::after\": {\n            backgroundColor: theme.color\n          }\n        },\n        variant: \"middle\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            color: theme.color\n          },\n          children: \"Alternative\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"guestBtn\",\n        style: {\n          fontStyle: \"italic\",\n          color: \"grey\"\n        },\n        to: `/`,\n        children: \"Already Have An Account? Login Here!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(LoginAsGuest, \"LidUGjXGvl6nqLnPI8yC77ot4bM=\");\n_c = LoginAsGuest;\nconst switchCustomText = /*#__PURE__*/_jsxDEV(Typography, {\n  color: \"error\",\n  sx: {\n    display: \"flex\"\n  },\n  children: [\"Happy Working \", /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n    color: \"error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 19\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 42,\n  columnNumber: 3\n}, this);\nexport default function CreateAccount() {\n  _s2();\n  const [isLoading, setIsLoading] = useState(false);\n  const [commission, setCommission] = useState(false);\n  const handleChange = event => {\n    const {\n      name,\n      value,\n      checked,\n      type\n    } = event.target;\n    setCommission(type === 'checkbox' ? checked : value);\n  };\n  const navigate = useNavigate();\n  const [open, setOpen] = useState(false);\n  // Call this function when the form is submitted successfully\n  const handleOpenSnackbar = () => {\n    setOpen(true);\n  };\n  const handleCloseSnackbar = (event, reason) => {\n    // Ignore close events from clicking away\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n    navigate('/');\n  };\n  // Account Creation Started Here!\n  const {\n    theme\n  } = useContext(ThemeContext);\n  const formik = useFormik({\n    validateOnChange: false,\n    validateOnBlur: false,\n    initialValues: {\n      profilePicture: \"\",\n      backgroundPicture: \"\",\n      paypalAccountID: 1,\n      allowCommission: false,\n      biography: \"\",\n      role: 2,\n      lastName: \"\",\n      firstName: \"\",\n      userName: \"\",\n      phone: \"\",\n      address: \"\",\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: values => {\n      let account = {\n        accountID: \"0\",\n        // Auto increasement id\n        roleID: \"2\",\n        //Default role as creator (AT)\n        email: values.email,\n        password: values.password,\n        banAccount: false\n      };\n      let creator = {\n        creatorID: \"0\",\n        accountID: \"0\",\n        paymentID: 1,\n        userName: values.userName,\n        profilePicture: values.profilePicture,\n        backgroundPicture: values.backgroundPicture,\n        firstName: values.firstName,\n        lastName: values.lastName,\n        address: values.address,\n        phone: values.phone,\n        lastLogDate: undefined,\n        biography: values.biography,\n        allowCommission: commission,\n        followCount: 0,\n        email: values.email,\n        vip: false\n      };\n      console.log(account);\n      console.log(creator);\n      const PostAccount = async () => {\n        try {\n          setIsLoading(true);\n          let newAccount = await PostUserAccount(account);\n          console.log(`Post Account successfully: ${newAccount}`);\n          let creatorWithAccountID = {\n            ...creator,\n            accountID: newAccount ? newAccount.accountID : \"1\"\n          };\n          await PostCreator(creatorWithAccountID);\n          console.log(`Post Creator successfully: `);\n          setIsLoading(false);\n          handleOpenSnackbar();\n        } catch (err) {\n          console.log(err);\n        }\n      };\n      PostAccount();\n    },\n    validationSchema: Yup.object({\n      userName: Yup.string().required(\"Must be 6 characters or more.\").min(6, \"Must be 6 characters or more\"),\n      email: Yup.string().required(\"We need something to authorize you\").min(10, \"Must be 10 characters or more\"),\n      password: Yup.string().required(\"Password! Or we gonna steal your account.\").min(5, \"Must be 5 characters or more\"),\n      biography: Yup.string().required(\"Tell the community something about yourself\")\n    })\n  });\n  return /*#__PURE__*/_jsxDEV(Background, {\n    children: [isLoading ? /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"createaccount\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signupForm\",\n        style: {\n          marginTop: '2%'\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          height: 'auto',\n          width: '80%',\n          my: 4,\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: 4,\n          p: 2,\n          sx: {\n            backgroundColor: theme.backgroundColor,\n            margin: 'auto'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: formik.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              className: \"formregister\",\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"header\",\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    sx: {\n                      color: theme.color\n                    },\n                    variant: \"h4\",\n                    component: \"h1\",\n                    gutterBottom: true,\n                    children: \"Register Account\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(CustomizedTextField, {\n                  id: \"email\",\n                  label: \"Email\",\n                  name: \"email\",\n                  autoComplete: \"email\",\n                  fullWidth: true,\n                  value: formik.values.email,\n                  onChange: formik.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 21\n                }, this), formik.errors.email && /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"red\",\n                  children: formik.errors.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 46\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(CustomizedTextField, {\n                  id: \"passwword\",\n                  label: \"Password\",\n                  name: \"password\",\n                  autoComplete: \"password\",\n                  fullWidth: true,\n                  value: formik.values.password,\n                  onChange: formik.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 21\n                }, this), formik.errors.password && /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"red\",\n                  children: formik.errors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: [/*#__PURE__*/_jsxDEV(CustomizedTextField, {\n                  id: \"firstName\",\n                  label: \"First Name (Optional)\",\n                  name: \"firstName\",\n                  autoComplete: \"email\",\n                  fullWidth: true,\n                  value: formik.values.firstName,\n                  onChange: formik.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 21\n                }, this), formik.errors.firstName && /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"red\",\n                  children: formik.errors.firstName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 50\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: [/*#__PURE__*/_jsxDEV(CustomizedTextField, {\n                  id: \"lastName\",\n                  label: \"Last Name (Optional)\",\n                  name: \"lastName\",\n                  autoComplete: \"email\",\n                  fullWidth: true,\n                  value: formik.values.lastName,\n                  onChange: formik.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 21\n                }, this), formik.errors.lastName && /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"red\",\n                  children: formik.errors.lastName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(CustomizedTextField, {\n                  id: \"userName\",\n                  label: \"User Name\",\n                  name: \"userName\",\n                  autoComplete: \"userName\",\n                  fullWidth: true,\n                  value: formik.values.userName,\n                  onChange: formik.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 21\n                }, this), formik.errors.userName && /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"red\",\n                  children: formik.errors.userName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(CustomizedSwitch, {\n                    checked: commission,\n                    onChange: handleChange,\n                    name: \"openToCommissions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 25\n                  }, this),\n                  label: commission ? switchCustomText : \"Open to Commissions?\",\n                  style: {\n                    color: theme.color\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(CustomizedTextField, {\n                  id: \"phone\",\n                  label: \"Your Phone (Optional)\",\n                  name: \"phone\",\n                  autoComplete: \"phone\",\n                  fullWidth: true,\n                  value: formik.values.phone,\n                  onChange: formik.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 21\n                }, this), formik.errors.phone && /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"red\",\n                  children: formik.errors.phone\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 46\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(CustomizedTextField, {\n                  id: \"address\",\n                  label: \"Address (Optional)\",\n                  name: \"address\",\n                  autoComplete: \"address\",\n                  fullWidth: true,\n                  value: formik.values.address,\n                  onChange: formik.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 21\n                }, this), formik.errors.address && /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"red\",\n                  children: formik.errors.address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 48\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(CustomizedTextField, {\n                  id: \"biography\",\n                  label: \"Biography\",\n                  name: \"biography\",\n                  autoComplete: \"biography\",\n                  fullWidth: true,\n                  multiline: true,\n                  rows: 3,\n                  value: formik.values.biography,\n                  onChange: formik.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 21\n                }, this), formik.errors.biography && /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"red\",\n                  children: formik.errors.biography\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 50\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  disabled: open,\n                  variant: \"contained\",\n                  type: \"submit\",\n                  style: {\n                    marginBottom: '20px'\n                  },\n                  fullWidth: true,\n                  children: \"REGISTER\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(LoginAsGuest, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: open,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnackbar,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: \"success\",\n        sx: {\n          width: '100%'\n        },\n        children: \"Your form has been submitted successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n_s2(CreateAccount, \"WtRW9p6PvfjdMGLAyTbtILQRzjk=\", false, function () {\n  return [useNavigate, useFormik];\n});\n_c2 = CreateAccount;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoginAsGuest\");\n$RefreshReg$(_c2, \"CreateAccount\");","map":{"version":3,"names":["React","useContext","useState","Button","Grid","Typography","Box","Divider","Snackbar","Alert","Link","useNavigate","useFormik","Yup","Background","ThemeContext","PostCreator","PostUserAccount","CustomizedSwitch","FormControlLabel","FavoriteIcon","LoadingScreen","CustomizedTextField","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginAsGuest","_s","theme","children","item","xs","sx","textAlign","paddingBottom","backgroundColor","color","variant","fileName","_jsxFileName","lineNumber","columnNumber","className","style","fontStyle","to","_c","switchCustomText","display","CreateAccount","_s2","isLoading","setIsLoading","commission","setCommission","handleChange","event","name","value","checked","type","target","navigate","open","setOpen","handleOpenSnackbar","handleCloseSnackbar","reason","formik","validateOnChange","validateOnBlur","initialValues","profilePicture","backgroundPicture","paypalAccountID","allowCommission","biography","role","lastName","firstName","userName","phone","address","email","password","onSubmit","values","account","accountID","roleID","banAccount","creator","creatorID","paymentID","lastLogDate","undefined","followCount","vip","console","log","PostAccount","newAccount","creatorWithAccountID","err","validationSchema","object","string","required","min","marginTop","height","width","my","alignItems","gap","p","margin","handleSubmit","container","spacing","component","gutterBottom","id","label","autoComplete","fullWidth","onChange","errors","control","multiline","rows","disabled","marginBottom","autoHideDuration","onClose","severity","_c2","$RefreshReg$"],"sources":["C:/Users/Admin/Documents/Code/REACT_NODE/ReactJS/Frontend-SWP301/src/Components/Forms/CreateAccount.tsx"],"sourcesContent":["\r\nimport React, { useContext, useState } from 'react'\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport './FormCSS/CreateAccount.css'\r\nimport LoginWithGoogle from '../../Login/Google/LoginWithGoogle.jsx';\r\nimport Box from '@mui/material/Box';\r\nimport Divider from '@mui/material/Divider';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport Alert from '@mui/material/Alert';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\"\r\nimport Background from '../Themes/Background.jsx';\r\nimport { ThemeContext, ThemeProvider } from '../Themes/ThemeProvider.tsx';\r\nimport { Account, Creator } from '../../Interfaces/UserInterface.ts';\r\nimport { PostCreator, PostUserAccount } from '../../API/UserAPI/POST.tsx';\r\nimport { GetAccountByEmail } from '../../API/UserAPI/GET.tsx';\r\nimport CustomizedSwitch from '../StyledMUI/CustomizedSwitch.jsx'\r\nimport { FormControlLabel } from '@mui/material';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport LoadingScreen from '../LoadingScreens/LoadingScreenSpokes.jsx';\r\nimport CustomizedTextField from '../StyledMUI/CustomizedTextField.tsx';\r\n\r\nfunction LoginAsGuest() {\r\n  const { theme } = useContext(ThemeContext)\r\n  return (\r\n    <>\r\n      <Grid item xs={12} sx={{ textAlign: 'center', paddingBottom: '5%' }}>\r\n        <Divider sx={{ \"&::before, &::after\": { backgroundColor: theme.color } }} variant='middle'>\r\n          <Typography variant='h6' sx={{color:theme.color}}>Alternative</Typography>\r\n        </Divider>\r\n        <Link className='guestBtn' style={{ fontStyle: \"italic\", color: \"grey\" }} to={`/`}>Already Have An Account? Login Here!</Link>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\nconst switchCustomText = (\r\n  <Typography color='error' sx={{ display: \"flex\" }}>\r\n    Happy Working <FavoriteIcon color='error' />\r\n  </Typography>\r\n)\r\nexport default function CreateAccount() {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [commission, setCommission] = useState(false)\r\n  const handleChange = (event) => {\r\n    const { name, value, checked, type } = event.target;\r\n    setCommission(type === 'checkbox' ? checked : value);\r\n  };\r\n  const navigate = useNavigate()\r\n  const [open, setOpen] = useState(false);\r\n  // Call this function when the form is submitted successfully\r\n  const handleOpenSnackbar = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleCloseSnackbar = (event?: React.SyntheticEvent | Event, reason?: string) => {\r\n    // Ignore close events from clicking away\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n    navigate('/')\r\n  };\r\n  // Account Creation Started Here!\r\n  const { theme } = useContext(ThemeContext)\r\n  const formik = useFormik({\r\n    validateOnChange: false,\r\n    validateOnBlur: false,\r\n    initialValues: {\r\n      profilePicture: \"\",\r\n      backgroundPicture: \"\",\r\n      paypalAccountID: 1,\r\n      allowCommission: false,\r\n      biography: \"\",\r\n      role: 2,\r\n      lastName: \"\",\r\n      firstName: \"\",\r\n      userName: \"\",\r\n      phone: \"\",\r\n      address: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n\r\n    },\r\n\r\n    onSubmit: (values) => {\r\n      let account: Account = {\r\n        accountID: \"0\", // Auto increasement id\r\n        roleID: \"2\", //Default role as creator (AT)\r\n        email: values.email,\r\n        password: values.password,\r\n        banAccount: false\r\n      }\r\n      let creator: Creator = {\r\n        creatorID: \"0\",\r\n        accountID: \"0\",\r\n        paymentID: 1,\r\n        userName: values.userName,\r\n        profilePicture: values.profilePicture,\r\n        backgroundPicture: values.backgroundPicture,\r\n        firstName: values.firstName,\r\n        lastName: values.lastName,\r\n        address: values.address,\r\n        phone: values.phone,\r\n        lastLogDate: undefined,\r\n        biography: values.biography,\r\n        allowCommission: commission,\r\n        followCount: 0,\r\n        email: values.email,\r\n        vip: false\r\n      }\r\n      console.log(account)\r\n      console.log(creator)\r\n      const PostAccount = async () => {\r\n        try {\r\n          setIsLoading(true)\r\n          let newAccount = await PostUserAccount(account)\r\n          console.log(`Post Account successfully: ${newAccount}`)\r\n          let creatorWithAccountID = { ...creator, accountID: newAccount ? newAccount.accountID : \"1\" }\r\n          await PostCreator(creatorWithAccountID)\r\n          console.log(`Post Creator successfully: `)\r\n          setIsLoading(false)\r\n          handleOpenSnackbar()\r\n        } catch (err) {\r\n          console.log(err)\r\n        }\r\n      }\r\n      PostAccount()\r\n    },\r\n\r\n    validationSchema: Yup.object({\r\n      userName: Yup.string().required(\"Must be 6 characters or more.\").min(6, \"Must be 6 characters or more\"),\r\n      email: Yup.string().required(\"We need something to authorize you\").min(10, \"Must be 10 characters or more\"),\r\n      password: Yup.string().required(\"Password! Or we gonna steal your account.\").min(5, \"Must be 5 characters or more\"),\r\n      biography: Yup.string().required(\"Tell the community something about yourself\")\r\n    }),\r\n  })\r\n  return (\r\n    <Background>\r\n       {isLoading ? <LoadingScreen />  : \"\"}\r\n      <div className='createaccount'>\r\n        <div className='signupForm' style={{ marginTop: '2%' }}>\r\n            <Box\r\n              height={'auto'}\r\n              width={'80%'}\r\n              my={4}\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              gap={4}\r\n              p={2}\r\n              sx={{ backgroundColor: theme.backgroundColor, margin: 'auto' }}\r\n            >\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <Grid className='formregister' container spacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <div className='header'>\r\n                      <Typography sx={{color:theme.color}} variant=\"h4\" component=\"h1\" gutterBottom>\r\n                        Register Account\r\n                      </Typography></div>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <CustomizedTextField\r\n                      id=\"email\"\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      autoComplete=\"email\"\r\n                      fullWidth\r\n                      value={formik.values.email} onChange={formik.handleChange}\r\n                    />\r\n                    {formik.errors.email && (<Typography variant=\"body2\" color=\"red\">{formik.errors.email}\r\n                    </Typography>)}\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <CustomizedTextField\r\n\r\n                      id=\"passwword\"\r\n                      label=\"Password\"\r\n                      name=\"password\"\r\n                      autoComplete=\"password\"\r\n                      fullWidth\r\n                      value={formik.values.password} onChange={formik.handleChange}\r\n                    />\r\n                    {formik.errors.password && (<Typography variant=\"body2\" color=\"red\">{formik.errors.password}\r\n                    </Typography>)}\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <CustomizedTextField\r\n\r\n                      id=\"firstName\"\r\n                      label=\"First Name (Optional)\"\r\n                      name=\"firstName\"\r\n                      autoComplete=\"email\"\r\n                      fullWidth\r\n                      value={formik.values.firstName} onChange={formik.handleChange}\r\n                    />\r\n                    {formik.errors.firstName && (<Typography variant=\"body2\" color=\"red\">{formik.errors.firstName}\r\n                    </Typography>)}\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <CustomizedTextField\r\n                      id=\"lastName\"\r\n                      label=\"Last Name (Optional)\"\r\n                      name=\"lastName\"\r\n                      autoComplete=\"email\"\r\n                      fullWidth\r\n                      value={formik.values.lastName} onChange={formik.handleChange}\r\n                    />\r\n                    {formik.errors.lastName && (<Typography variant=\"body2\" color=\"red\">{formik.errors.lastName}\r\n                    </Typography>)}\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <CustomizedTextField\r\n                      id=\"userName\"\r\n                      label=\"User Name\"\r\n                      name=\"userName\"\r\n                      autoComplete=\"userName\"\r\n                      fullWidth\r\n                      value={formik.values.userName} onChange={formik.handleChange}\r\n                    />\r\n                    {formik.errors.userName && (<Typography variant=\"body2\" color=\"red\">{formik.errors.userName}\r\n                    </Typography>)}\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <CustomizedSwitch\r\n                          checked={commission}\r\n                          onChange={handleChange}\r\n                          name=\"openToCommissions\"\r\n                        />\r\n                      }\r\n                      label={commission ? switchCustomText : \"Open to Commissions?\"}\r\n                      style={{ color: theme.color }}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <CustomizedTextField\r\n                      id=\"phone\"\r\n                      label=\"Your Phone (Optional)\"\r\n                      name=\"phone\"\r\n                      autoComplete=\"phone\"\r\n                      fullWidth\r\n                      value={formik.values.phone} onChange={formik.handleChange}\r\n                    />\r\n                    {formik.errors.phone && (<Typography variant=\"body2\" color=\"red\">{formik.errors.phone}\r\n                    </Typography>)}\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <CustomizedTextField\r\n                      id=\"address\"\r\n                      label=\"Address (Optional)\"\r\n                      name=\"address\"\r\n                      autoComplete=\"address\"\r\n                      fullWidth\r\n                      value={formik.values.address} onChange={formik.handleChange}\r\n                    />\r\n                    {formik.errors.address && (<Typography variant=\"body2\" color=\"red\">{formik.errors.address}\r\n                    </Typography>)}\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <CustomizedTextField\r\n                      id=\"biography\"\r\n                      label=\"Biography\"\r\n                      name=\"biography\"\r\n                      autoComplete=\"biography\"\r\n                      fullWidth\r\n                      multiline\r\n                      rows={3}\r\n                      value={formik.values.biography} onChange={formik.handleChange}\r\n                    />\r\n                    {formik.errors.biography && (<Typography variant=\"body2\" color=\"red\">{formik.errors.biography}\r\n                    </Typography>)}\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Button disabled={open} variant=\"contained\" type='submit' style={{ marginBottom: '20px' }} fullWidth>\r\n                      REGISTER\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                <LoginAsGuest />\r\n              </form>\r\n            </Box>\r\n         \r\n        </div>\r\n      </div>\r\n\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleCloseSnackbar}>\r\n        <Alert onClose={handleCloseSnackbar} severity=\"success\" sx={{ width: '100%' }}>\r\n          Your form has been submitted successfully!\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n    </Background>\r\n  )\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}