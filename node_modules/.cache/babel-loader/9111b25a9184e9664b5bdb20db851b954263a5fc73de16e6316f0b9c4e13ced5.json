{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\Code\\\\REACT_NODE\\\\ReactJS\\\\Frontend-SWP301\\\\src\\\\Components\\\\StyledMUI\\\\CustomizedButton.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { Button } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport { ThemeContext } from \"../Themes/ThemeProvider.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CustomizedButton({\n  children,\n  ...props\n}) {\n  _s();\n  // eslint-disable-next-line\n  const {\n    dark,\n    theme\n  } = useContext(ThemeContext);\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Button, {\n    className: dark ? classes.darkButton : classes.lightButton,\n    ...props,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this);\n}\n_s(CustomizedButton, \"Dt+vkI7wiwiHgqwQgoILxhLGJlg=\", false, function () {\n  return [useStyles];\n});\n_c = CustomizedButton;\nconst useStyles = makeStyles({\n  darkButton: {\n    color: 'inherit',\n    // White text for better contrast\n    backgroundColor: 'none',\n    '&:hover': {\n      backgroundColor: '#302e4d' // Lighter blue on hover for dark mode\n    }\n  },\n  lightButton: {\n    color: 'inherit',\n    // Dark text for better contrast in light mode\n    backgroundColor: 'none',\n    '&:hover': {\n      backgroundColor: '#F5F5F5' // smokey color on hover for light mode\n    }\n  }\n});\nexport default CustomizedButton;\nvar _c;\n$RefreshReg$(_c, \"CustomizedButton\");","map":{"version":3,"names":["React","useContext","Button","makeStyles","ThemeContext","jsxDEV","_jsxDEV","CustomizedButton","children","props","_s","dark","theme","classes","useStyles","className","darkButton","lightButton","fileName","_jsxFileName","lineNumber","columnNumber","_c","color","backgroundColor","$RefreshReg$"],"sources":["C:/Users/Admin/Documents/Code/REACT_NODE/ReactJS/Frontend-SWP301/src/Components/StyledMUI/CustomizedButton.tsx"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { Button } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport {ThemeContext} from \"../Themes/ThemeProvider.tsx\"\r\n\r\nfunction CustomizedButton({children, ...props}) {\r\n  // eslint-disable-next-line\r\n    const { dark,theme } = useContext(ThemeContext);\r\n    const classes = useStyles();\r\n  \r\n    return (\r\n      <Button\r\n        className={dark ? classes.darkButton : classes.lightButton}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </Button>\r\n    );\r\n  }\r\n\r\nconst useStyles = makeStyles( ({\r\n  darkButton: {\r\n\r\n    color: 'inherit', // White text for better contrast\r\n    backgroundColor: 'none',\r\n\r\n    '&:hover': {\r\n      backgroundColor: '#302e4d', // Lighter blue on hover for dark mode\r\n    },\r\n  },\r\n  lightButton: {\r\n\r\n    color: 'inherit', // Dark text for better contrast in light mode\r\n    backgroundColor: 'none',\r\n\r\n    '&:hover': {\r\n      backgroundColor: '#F5F5F5', // smokey color on hover for light mode\r\n    },\r\n  },\r\n}));\r\n\r\nexport default CustomizedButton;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,UAAU,QAAQ,aAAa;AACxC,SAAQC,YAAY,QAAO,6BAA6B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,gBAAgBA,CAAC;EAACC,QAAQ;EAAE,GAAGC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAC9C;EACE,MAAM;IAAEC,IAAI;IAACC;EAAM,CAAC,GAAGX,UAAU,CAACG,YAAY,CAAC;EAC/C,MAAMS,OAAO,GAAGC,SAAS,CAAC,CAAC;EAE3B,oBACER,OAAA,CAACJ,MAAM;IACLa,SAAS,EAAEJ,IAAI,GAAGE,OAAO,CAACG,UAAU,GAAGH,OAAO,CAACI,WAAY;IAAA,GACvDR,KAAK;IAAAD,QAAA,EAERA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb;AAACX,EAAA,CAbMH,gBAAgB;EAAA,QAGLO,SAAS;AAAA;AAAAQ,EAAA,GAHpBf,gBAAgB;AAezB,MAAMO,SAAS,GAAGX,UAAU,CAAG;EAC7Ba,UAAU,EAAE;IAEVO,KAAK,EAAE,SAAS;IAAE;IAClBC,eAAe,EAAE,MAAM;IAEvB,SAAS,EAAE;MACTA,eAAe,EAAE,SAAS,CAAE;IAC9B;EACF,CAAC;EACDP,WAAW,EAAE;IAEXM,KAAK,EAAE,SAAS;IAAE;IAClBC,eAAe,EAAE,MAAM;IAEvB,SAAS,EAAE;MACTA,eAAe,EAAE,SAAS,CAAE;IAC9B;EACF;AACF,CAAE,CAAC;AAEH,eAAejB,gBAAgB;AAAC,IAAAe,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}