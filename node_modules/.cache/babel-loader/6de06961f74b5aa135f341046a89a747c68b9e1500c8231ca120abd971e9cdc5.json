{"ast":null,"code":"import axios from 'axios';\nconst createorderheaderurl = `https://localhost:7233/api/Orders/`;\nconst headers = {\n  'Content-Type': 'application/json'\n  // Optionally, add additional headers such as Authorization if required\n  // 'Authorization': 'Bearer your-token',\n};\nexport async function PutOrderHeader(values, id) {\n  try {\n    let form = await axios.put(createorderheaderurl + id, values, {\n      headers\n    }).then(response => response.data);\n    return form;\n  } catch (err) {\n    console.log(err);\n  }\n}\n_c = PutOrderHeader;\nvar _c;\n$RefreshReg$(_c, \"PutOrderHeader\");","map":{"version":3,"names":["axios","createorderheaderurl","headers","PutOrderHeader","values","id","form","put","then","response","data","err","console","log","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Documents/Code/REACT_NODE/ReactJS/frontend/src/API/OrderAPI/PUT.tsx"],"sourcesContent":["import axios from 'axios'\r\nimport { OrderDetails, OrderHeader } from '../../Interfaces/OrderInterfaces';\r\n\r\nconst createorderheaderurl = `https://localhost:7233/api/Orders/`\r\n\r\n\r\nconst headers = {\r\n    'Content-Type': 'application/json',\r\n    // Optionally, add additional headers such as Authorization if required\r\n    // 'Authorization': 'Bearer your-token',\r\n  };\r\n\r\nexport async function PutOrderHeader(values:OrderHeader,id:string) {\r\n    try{\r\n        let form:OrderHeader = await axios.put(createorderheaderurl+id,values,{headers}).then(response => response.data)\r\n        return form\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,oBAAoB,GAAI,oCAAmC;AAGjE,MAAMC,OAAO,GAAG;EACZ,cAAc,EAAE;EAChB;EACA;AACF,CAAC;AAEH,OAAO,eAAeC,cAAcA,CAACC,MAAkB,EAACC,EAAS,EAAE;EAC/D,IAAG;IACC,IAAIC,IAAgB,GAAG,MAAMN,KAAK,CAACO,GAAG,CAACN,oBAAoB,GAACI,EAAE,EAACD,MAAM,EAAC;MAACF;IAAO,CAAC,CAAC,CAACM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC;IAChH,OAAOJ,IAAI;EACf,CAAC,QAAMK,GAAG,EAAC;IACPC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EACpB;AACJ;AAACG,EAAA,GAPqBX,cAAc;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}