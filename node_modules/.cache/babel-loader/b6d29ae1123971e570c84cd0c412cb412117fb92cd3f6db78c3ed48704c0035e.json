{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\Code\\\\REACT_NODE\\\\ReactJS\\\\Frontend-SWP301\\\\src\\\\Components\\\\StyledMUI\\\\CustomizedSwitch.jsx\";\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Switch from '@mui/material/Switch';\n// Create a theme instance.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  components: {\n    MuiSwitch: {\n      styleOverrides: {\n        switchBase: {\n          color: 'lightgray',\n          // Color of the switch when it is not checked\n          '&$checked': {\n            color: 'green' // Color of the switch thumb when it is checked\n          },\n          '&$checked + $track': {\n            backgroundColor: 'green' // Color of the switch track when it is checked\n          }\n        },\n        track: {\n          backgroundColor: 'gray' // Color of the switch track when it is not checked\n        }\n      }\n    }\n  }\n});\n// Then wrap your switch component with the ThemeProvider\nconst CustomizedSwitch = ({\n  checked,\n  onChange,\n  ...props\n}) => {\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      checked: checked,\n      onChange: onChange,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = CustomizedSwitch;\nexport default CustomizedSwitch;\nvar _c;\n$RefreshReg$(_c, \"CustomizedSwitch\");","map":{"version":3,"names":["createTheme","ThemeProvider","Switch","jsxDEV","_jsxDEV","theme","components","MuiSwitch","styleOverrides","switchBase","color","backgroundColor","track","CustomizedSwitch","checked","onChange","props","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Documents/Code/REACT_NODE/ReactJS/Frontend-SWP301/src/Components/StyledMUI/CustomizedSwitch.jsx"],"sourcesContent":["import { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Switch from '@mui/material/Switch';\r\n// Create a theme instance.\r\nconst theme = createTheme({\r\n  components: {\r\n    MuiSwitch: {\r\n      styleOverrides: {\r\n        switchBase: {\r\n          color: 'lightgray', // Color of the switch when it is not checked\r\n          '&$checked': {\r\n            color: 'green', // Color of the switch thumb when it is checked\r\n          },\r\n          '&$checked + $track': {\r\n            backgroundColor: 'green', // Color of the switch track when it is checked\r\n          },\r\n        },\r\n        track: {\r\n          backgroundColor: 'gray', // Color of the switch track when it is not checked\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n// Then wrap your switch component with the ThemeProvider\r\nconst CustomizedSwitch = ({ checked, onChange,...props }) => {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Switch\r\n        checked={checked}\r\n        onChange={onChange}\r\n        {...props}\r\n        // other props\r\n      />\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default CustomizedSwitch;"],"mappings":";AAAA,SAASA,WAAW,EAAEC,aAAa,QAAQ,sBAAsB;AACjE,OAAOC,MAAM,MAAM,sBAAsB;AACzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,KAAK,GAAGL,WAAW,CAAC;EACxBM,UAAU,EAAE;IACVC,SAAS,EAAE;MACTC,cAAc,EAAE;QACdC,UAAU,EAAE;UACVC,KAAK,EAAE,WAAW;UAAE;UACpB,WAAW,EAAE;YACXA,KAAK,EAAE,OAAO,CAAE;UAClB,CAAC;UACD,oBAAoB,EAAE;YACpBC,eAAe,EAAE,OAAO,CAAE;UAC5B;QACF,CAAC;QACDC,KAAK,EAAE;UACLD,eAAe,EAAE,MAAM,CAAE;QAC3B;MACF;IACF;EACF;AACF,CAAC,CAAC;AACF;AACA,MAAME,gBAAgB,GAAGA,CAAC;EAAEC,OAAO;EAAEC,QAAQ;EAAC,GAAGC;AAAM,CAAC,KAAK;EAC3D,oBACEZ,OAAA,CAACH,aAAa;IAACI,KAAK,EAAEA,KAAM;IAAAY,QAAA,eAC1Bb,OAAA,CAACF,MAAM;MACLY,OAAO,EAAEA,OAAQ;MACjBC,QAAQ,EAAEA,QAAS;MAAA,GACfC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEpB,CAAC;AAACC,EAAA,GAXIT,gBAAgB;AAatB,eAAeA,gBAAgB;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}